// <auto-generated />
using System;
using Day40Demo.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Day40Demo.Migrations
{
    [DbContext(typeof(HrDbContext))]
    partial class HrDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Day40Demo.DataAccess.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Employee", "master");
                });

            modelBuilder.Entity("Day40Demo.DataAccess.Models.LeaveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EmployeeRefId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LeaveFrom")
                        .HasColumnType("date");

                    b.Property<DateTime>("LeaveTo")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeRefId");

                    b.ToTable("LeaveRequest", "deductions");
                });

            modelBuilder.Entity("Day40Demo.DataAccess.Models.Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Ctc")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("EmployeeRefId")
                        .HasColumnType("int");

                    b.Property<decimal>("VariableBonus")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeRefId");

                    b.ToTable("Salary", "accounts");
                });

            modelBuilder.Entity("Day40Demo.DataAccess.Models.LeaveRequest", b =>
                {
                    b.HasOne("Day40Demo.DataAccess.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Day40Demo.DataAccess.Models.Salary", b =>
                {
                    b.HasOne("Day40Demo.DataAccess.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
